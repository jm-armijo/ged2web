class EnglishTranslator
    def self.translate(key)
        map = {
            'family_tree' => 'family tree',
            'view'        => 'view',
            'tree'        => 'tree',
            'list'        => 'list',
            'first_name'  => 'first name',
            'last_name'   => 'last name',
            'abbr'        => 'abbreviation',
            'abt'         => 'about',
            'addr'        => 'address',
            'adop'        => 'adoption',
            'adr1'        => 'address1',
            'adr2'        => 'address2',
            'afn'         => 'afn',
            'aft'         => 'after',
            'age'         => 'age',
            'agnc'        => 'agency',
            'alia'        => 'alias',
            'ance'        => 'ancestors',
            'anci'        => 'ances_interest',
            'and'         => 'and',
            'anul'        => 'annulment',
            'asso'        => 'associates',
            'auth'        => 'author',
            'bapl'        => 'baptism-lds',
            'bapm'        => 'baptism',
            'barm'        => 'bar_mitzvah',
            'basm'        => 'bas_mitzvah',
            'bef'         => 'before',
            'bet'         => 'between',
            'birt'        => 'birth',
            'bles'        => 'blessing',
            'buri'        => 'burial',
            'cal'         => 'calculated',
            'caln'        => 'call_number',
            'cast'        => 'caste',
            'caus'        => 'cause',
            'cens'        => 'census',
            'chan'        => 'change',
            'char'        => 'character',
            'chil'        => 'child',
            'chra'        => 'adult_christening',
            'chr'         => 'christening',
            'city'        => 'city',
            'conc'        => 'concatenation',
            'conf'        => 'confirmation',
            'conl'        => 'confirmation_lds',
            'cont'        => 'continued',
            'copr'        => 'copyright',
            'corp'        => 'corporate',
            'crem'        => 'cremation',
            'ctry'        => 'country',
            'data'        => 'data',
            'date'        => 'date',
            'deat'        => 'death',
            'desc'        => 'descendants',
            'desi'        => 'descendant_int',
            'dest'        => 'destination',
            'div'         => 'divorce',
            'divf'        => 'divorce_filed',
            'dscr'        => 'phy_description',
            'educ'        => 'education',
            'emai'        => 'email',
            'emig'        => 'emigration',
            'endl'        => 'endowment',
            'enga'        => 'engagement',
            'even'        => 'event',
            'est'         => 'estimated',
            'fact'        => 'fact',
            'famc'        => 'family_child',
            'fam'         => 'family',
            'famf'        => 'family_file',
            'fams'        => 'family_spouse',
            'father'      => 'father',
            'fax'         => 'facimilie',
            'fcom'        => 'first_communion',
            'f'           => 'female',
            'file'        => 'file',
            'fone'        => 'phonetic',
            'form'        => 'format',
            'gedc'        => 'gedcom',
            'givn'        => 'given_name',
            'grad'        => 'graduation',
            'head'        => 'header',
            'husb'        => 'husband',
            'idno'        => 'ident_number',
            'immi'        => 'immigration',
            'indi'        => 'individual',
            'lang'        => 'language',
            'lati'        => 'latitude',
            'long'        => 'longitude',
            'map'         => 'map',
            'marb'        => 'marriage_bann',
            'marc'        => 'marr_contract',
            'marl'        => 'marr_license',
            'marr'        => 'marriage',
            'mars'        => 'marr_settlement',
            'medi'        => 'media',
            'm'           => 'male',
            'mother'      => 'mother',
            'name'        => 'name',
            'nati'        => 'nationality',
            'natu'        => 'naturalization',
            'nchi'        => 'children_count',
            'nick'        => 'nickname',
            'nmr'         => 'marriage_count',
            'note'        => 'note',
            'npfx'        => 'name_prefix',
            'nsfx'        => 'name_suffix',
            'obje'        => 'object',
            'occu'        => 'occupation',
            'ordi'        => 'ordinance',
            'ordn'        => 'ordination',
            'page'        => 'page',
            'pedi'        => 'pedigree',
            'phon'        => 'phone',
            'plac'        => 'place',
            'post'        => 'postal_code',
            'prob'        => 'probate',
            'prop'        => 'property',
            'publ'        => 'publication',
            'quay'        => 'quality_of_data',
            'refn'        => 'reference',
            'rela'        => 'relationship',
            'reli'        => 'religion',
            'repo'        => 'repository',
            'resi'        => 'residence',
            'resn'        => 'restriction',
            'reti'        => 'retirement',
            'rfn'         => 'rec_file_number',
            'rin'         => 'rec_id_number',
            'role'        => 'role',
            'romn'        => 'romanized',
            'sex'         => 'gender',
            'slgc'        => 'sealing_child',
            'slgs'        => 'sealing_spouse',
            'sources'     => 'sources',
            'sour'        => 'source',
            'spfx'        => 'surn_prefix',
            'ssn'         => 'soc_sec_number',
            'stae'        => 'state',
            'stat'        => 'status',
            'subm'        => 'submitter',
            'subn'        => 'submission',
            'surn'        => 'surname',
            'temp'        => 'temple',
            'text'        => 'text',
            'time'        => 'time',
            'titl'        => 'title',
            'trlr'        => 'trailer',
            'type'        => 'type',
            'vers'        => 'version',
            'wife'        => 'wife',
            'will'        => 'will'
        }

        return map[key] if map.key?(key)

        raise "Can't translate '#{key}' into English"
    end
end
